const hre = require("hardhat");

async function main() {
  const [deployer] = await hre.ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);

  // Step 1: Deploy the GRULL token
  console.log("\n--- Deploying GRULL Token ---");
  const GRULL = await hre.ethers.getContractFactory("grull_token");
  const grull = await GRULL.deploy();
  await grull.waitForDeployment();

  const grullAddress = await grull.getAddress();
  console.log("GRULL token deployed to:", grullAddress);
  console.log("Token name:", await grull.name());
  console.log("Token symbol:", await grull.symbol());
  console.log("Total supply:", (await grull.totalSupply()).toString());

  // Get all test accounts and distribute tokens
  const testAccounts = await hre.ethers.getSigners();
  console.log("\n--- Distributing tokens to test accounts ---");
  
  for (let i = 0; i < testAccounts.length; i++) {
    const account = testAccounts[i];
    if (account.address !== deployer.address) {  // Skip deployer as they already have tokens
      const tx = await grull.transfer(account.address, hre.ethers.parseEther("1000"));
      await tx.wait();
      console.log(`Transferred 1000 GRULL to ${account.address}`);
    }
  }

  // Step 2: Deploy the JurorStaking contract
  console.log("\n--- Deploying JurorStaking Contract ---");
  const minimumStake = hre.ethers.parseEther("100");
  
  const JurorStaking = await hre.ethers.getContractFactory("JurorStaking");
  const jurorStaking = await JurorStaking.deploy(grullAddress, minimumStake);
  await jurorStaking.waitForDeployment();

  const jurorStakingAddress = await jurorStaking.getAddress();
  console.log("JurorStaking deployed to:", jurorStakingAddress);
  console.log("Minimum stake:", hre.ethers.formatEther(minimumStake), "GRULL");

  // Approve JurorStaking to spend tokens for all accounts
  console.log("\n--- Approving token spending for all accounts ---");
  for (let i = 0; i < testAccounts.length; i++) {
    const account = testAccounts[i];
    const grullWithSigner = grull.connect(account);
    const tx = await grullWithSigner.approve(jurorStakingAddress, hre.ethers.MaxUint256);
    await tx.wait();
    console.log(`Approved JurorStaking for ${account.address}`);
  }

  // Save the addresses to a file for the frontend to use
  const fs = require('fs');
  const path = require('path');
  
  const configContent = `// This file is automatically generated during deployment

export const JUROR_STAKING_ADDRESS = '${jurorStakingAddress}';
export const TOKEN_ADDRESS = '${grullAddress}';
`;
  
  fs.writeFileSync(
    path.join(__dirname, '../frontend/src/config.js'),
    configContent
  );
  
  console.log("\n--- Deployment Complete ---");
  console.log("GRULL Token:", grullAddress);
  console.log("JurorStaking:", jurorStakingAddress);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  }); 